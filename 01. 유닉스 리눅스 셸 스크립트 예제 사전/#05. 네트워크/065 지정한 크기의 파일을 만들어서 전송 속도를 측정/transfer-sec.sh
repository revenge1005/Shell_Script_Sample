#/bin/bash

### 사용처 ###
# 어떤 서버에 임시 파일을 전송해서 통신 속도를 측정하고 싶을 때

### 사용 명령어 ###
# dd, time, ftp, bc

### 해설 ###
# 이 스크립트는 임시 파일을 만들어 FTP 전송해서 전송 속도를 측정한다.

# 스크립트를 실핸한 서버와 셸 변수 server로 지정한 서버 사이의 통신 속도를 조사하는 용도로 사용한다.

################################################################################################################################################################

# 전송 속도를 측정할 임시 파일 크기 지정. 단위는 킬로바이트(KB)
filesize=1024                                                                # (1)

# 전송 속도를 측정할 임시 파일명
tmpdata="tmpdata.tmp"                                                       # (2)
timefile="timecount.tmp"

# 전송에 사용할 임시 파일 작성
dd if=/dev/zero of="$tmpdata" count=$filesize bs=1024 2> /dev/null           # (3)

# FTP 접속해서 파일을 PUT
server="192.168.219.110"                                                     # ┐
user="choi"                                                                  # │ (4)
password="1234"                                                              # ┘

# FTP 접속해서 파일을 PUT
echo "Filesize: $filesize (KB)"
echo "FTP Server: $server"

# (5)
(time -p ftp -n "$server") << __EOT__ 2> "$timefile"                         
user "$user" "$password"
binary
put "$tmpdata"
__EOT__

# time 명령어 출력 결과에서 실제 시간을 얻은 후 나눠서 속도 계산
realtime=$(awk '/^real / {print $2}' "$timefile")                            # (6) 
speed=$(echo "${filesize}/${realtime}" | bc)                                 # (7)
echo "Transfer Speed: $speed (KB/sec)"

# 임시 파일 삭제
rm -f "$tmpdata" "$timefile"

################################################################################################################################################################

# (1)과 (2)에서 속도 특정을 위한 임시 파일의 키기 및 파일명(tmpdata)을 설정한다.
# 동시에 시간 측정을 위한 임시 파일명(timefile)도 설정한다.

# 여기서 파일 크기는 1024KB(1MB)를 지정했는데 네트워크 상태에 따라 적절한 값이 다를 수 있다.
# 크기가 너무 작으면 순식간에 전송이 끝나서 제대로 속도를 계산할 수 없고 크기가 너무 크면 서버와 네트워크에 부하가 걸릴 수도 있다.

# (3)에서 전송할 임시 파일을 dd 명령어로 작성한다.
# dd 명령어는 지정한 입력에서 출력을 복사하는 명령어이다.
# 스크립트에서는 dd 명령어 결과 출력을 표시하지 않아도 되므로 /dev/null로 표준 에러 출력을 리다이렉트한다.

# 임시 파일 작성에 사용하는 옵션
# if=/dev/zero          : 입력으로 /dev/zero라는 널 문자를 읽을 수 있는 스페셜 디바이스 지정
# of="$filename"        : 셸 변수 filename으로 정의된 파일명을 출력으로 지정
# count=$filesize       : 셸 변수 filesize로 지정한 횟수만큼 복사
# bs=1024               : 복사할 블록 크기 1024바이트

# 여기서 널 문자(ASCII 코드로 0x00)로 채운 1024(KB)x1024(회) = 1MB 임시 파일이 만들어 진다.
# 이렇게 /dev/zero로 임시 파일을 만들면 빨리 파일을 만들 수 있지만 내용물은 전부 같다.
# 전송 속도를 측정할 때 프로토콜에 따라서는 자동으로 압축되므로 이런 내용물이 전부 같은 파일은 압축률이 높아서 측정용으로 적합하지 않는다.

# 용도에 따라서는 /dev/zero가 아닌 /dev/urandom에서 읽어들이면 파일 내용이 랜덤이 되어서 더 현실적인 파일이 만들어진다.
# dd if=/dev/zero of="tmp.dat" count=1024 bs=1024 

################################################################################################################################################################

# 전송 파일이 만들어졌으므로 실체 파일을 전송한다 (4)에서 FTP로 파일을 전송하는 설정을 작성한다.
# ftp 전송 시 (5)에서 time 명령어를 사용한다.
# 초만 표시하는 -p 옵션을 써서 실제 시간 real을 얻는다.

# (5)는 명령어 전체를 ()로 둘러싼 서브셸이다.
# 명령어 전체를 통째로 리다이렉트하기 위한 처리로, 서브셸을 사용하지 않고 작성하면 FTP 명려어 결과만 리다이렉트되어서 
# time 명령어 결과를 얻을 수 없다.

################################################################################################################################################################

# (6)에서 전송 속도를 측정한다.
# 우선 time 명령어 표시 결과를 출력한 파일 $timefile에서 명령어 실행에 걸린 시간 real을 취득한다.

# 전송 속도는 "파일 크기 / 시간"이므로 (7)에서 bc 명령어를 사용한다.
# 셸 스크립트 계산에는 expr을 자주 사용하지만 expr 명령어는 소수를 사용하지 못하므로 bc 명령어를 사용한다.
# 나눗셈 식을 echo 명령어로 표시해서 파이프로 bc 명령어에 입력해서 계산 결과를 얻는다.

# 예제에서는 파일 크기는 킬로바이트 단위고, time 명령어 출력은 초 단위이므로 (7)에서 계산한 속도 단위는 킬로바이트/초가 된다.