#/bin/bash

### 사용처 ###
# 셸 스크립트로 CGI 프로그램을 작성하고 싶을 때

### 사용 명령어 ###
# echo, uptime

### 해설 ###
# 이 스크립트는 CGI 프로그램으로 셸 스크립트를 실행한다.

# 웹 브라우저로 접속하면 uptime 명령어 출력 결과를 표시해서 서버 로드 평균치 등을 확인할 수 있다.

################################################################################################################################################################

# CGI 헤더 출력
echo "Content-Type: text/plain"
echo

# 명령어를 실행해서 브라우저에 표시
echo "Test CGI: uptime"
uptime

################################################################################################################################################################

# CGI 프로그램을 작성할 때 프로그래밍 언어로 보통 펄이나 루비를 사용한다.

# 따라서 셸 스크립트로 CGI 프로그램을 작성하는 것이 이상해 보일 수도 있지만 CGI 프로그램을 꼭 펄로 작성해야 하는 것은
# 아니고 웹 브라우저가 해석 가능하도록 적절히 출력할 수만 있으면 언어는 뭐라도 상관 없다.

# (1)에서 CGI 헤더를 출력한다.
# 명령어 출력 결과를 그대로 브라우저에서 표시하므로 text/plain 으로 출력한다.
# 따라서 HTTP 헤더 부분과 본문 부분을 빈 줄로 나눠야 하므로 빈 echo 명령어를 써서 줄바꿈을 출력한다.

# (2)에서 HTTP 응답의 본문 부분 즉, 웹 브라우저에 표시하는 부분을 출력한다.
# "Test CGI: uptime" 이라는 문자열을 echo 명령어로 표시한 다음 uptime 명령어를 실행한다.
# uptime 명령어는 서버 기동 시간과 과거 1분/5분/15분 로드 평균값을 표시하는 명령이다.

################################################################################################################################################################

# 이렇게 CGI로 셸 스크립트를 사용하면 웹 브라우저에서 실행 결과를 확인할 수 있다.

# 그 외의 셸 스크립트로 CGI를 사용하는 예로는 서버 구축 확인용이 있다.

# 최소 구성으로 FreeBSD나 CentOS를 설치하면 펄이 설치되지 않으며, 서버 구축 작업과 프로그램 개발을 동시 진행하는 프로젝트에서
# 임시로 웹 서버를 실행해서 클라이언트에서 CGI에 접속 가능한지 확인하는 경우가 있다.

# 이때 셸 스크립트로 작성한 CGI 프로그램을 설치해서 클라이언트에서 접속을 미리 확인해볼 수 있다.