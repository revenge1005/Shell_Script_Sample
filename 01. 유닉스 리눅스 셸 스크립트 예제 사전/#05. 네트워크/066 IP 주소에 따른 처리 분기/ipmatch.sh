#/bin/bash

### 사용처 ###
# IP 주소마다 다른 처리를 하도록 간단히 분기하고 싶을 떄

### 사용 명령어 ###
# case, ping

### 해설 ###
# 이 스크립트는 인수로 지정한 IP 주소에 Ping 명령어로 ICMP 패킷을 보내서 네트워크 개통을 확인한다.

# 이때 테스트와 관계없는 네트워크라면 ping 명령어를 실행하지 않도록 처리한다.

################################################################################################################################################################
 
# 대상 IP 주소를 명령행 인수로 지정하지 않으면 에러 표시 후 종료
if [ -z "$1" ]; then                                   
    echo "IP 주소를 지정하세요." >& 2                  #  (1)  
    exit 1
fi

# 대상 네트워크라면 PING 명령 실행
case "$1" in
    192.168.56.*|192.168.219.*)                       #  (2)
        ping -c 1 "$1" > /dev/null 2>&1               #  (3)

        if [ $? -eq 0 ]; then                         #  (4)
            echo "Ping to $1 : [OK]"
        else
            echo "Ping to $1 : [NG]"
        fi
    ;;
    *)                                                #  (5)
        echo "$1 테스트 대상이 아닙니다." >&2
        exit 2
    ;;
esac

################################################################################################################################################################
 
# (1)에서 test 명령 -z 를 사용해서 명령행 인수가 지정되어 있는지 확인한다.
# -z는 빈 문자열일 때 참이 되므로 (1)의 if 문이 참이면 명령행 인수가 없다는 뜻이다.

# (2)에서 입력된 IP 주소를 case 문으로 비교한다.
# case 문으로 패턴을 비교하는데 *(애스터리스크) 같은 와일드카드를 사용할 수 있다.
# 따라서 192.168.56.0/24과 192.168.219.0/24 네트워크로 비교할 수 있다.

# (3)에서 지정한 IP 주소에 ping 명령어를 실행한다.
# (3)에서 ping 명령어 종료 스테이터스만 필요하고 도중 출력은 필요하지 않으므로 표준 출력과 표준 에러 출력을 /dev/null로 리다이렉트해서 버린다.

# (4)에서 값을 비교한다.
# 종료 스트에터스는 셸 특수 변수 $?에 들어 있으며, 종료 스테이터스가 0이면 [OK] 아니면 [NG]

# (5)는 case문에 *(애스터리스크)가 있으므로 이전에 일치하지 않은 모든 주소가 해당한다.
# 따라서 테스트 대상이 아니라고 표시하고 종료한다.