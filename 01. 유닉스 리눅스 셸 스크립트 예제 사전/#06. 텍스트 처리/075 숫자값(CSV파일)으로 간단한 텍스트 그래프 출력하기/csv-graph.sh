#!/bin/bash

### 사용처 ###
# 숫자 자료를 간단히 텍스트 그래프로 표시하고 싶을 때

### 사용 명령어 ###
# echo, awk, sort, expr, read

### 해설 ###
# 이 스크립트는 명령행 인수로 지정한 CSV 파일 점수값을 "*"를 사용해 텍스트 그래프로 출력한다.

# 그래픽 그래프를 엑셀 등으로 작성하는 경우가 많은데, 텍스트 그래프 역시 메일 본문이나 터미널에서 상태를 보는 용도로 사용됐다.

################################################################################################################################################################
 
# 자료 CSV 파일, 그래프 너비
# (1)
csvfile="data.csv"
GRAPH_WIDTH=50

markprint()                                                        # (2)
{
    local i=0                                                      # (3)
    while [ $i -lt $1 ]                                            # (4)
    do
        echo -n "*"                                                # (5)
        i=$(expr $i + 1)
    done
}

# 자료에서 최댓값 얻음, 역순 정렬해서 첫 줄 얻음
max=$(awk -F, '{print $3}' "$csvfile" | sort -nr | head -n 1)      # (6)

# 자료가 모두 0이면 최댓값을 1로 지정
if [ $max -eq 0 ]; then                                            # (7)
    max=1
fi

# CSV 파일을 읽어서 값마다 그래프 출력
while IFS=, read id name score                                     # (8)
do
    markprint $(expr $GRAPH_WIDTH \* $score / $max)                # (9)
    echo " [$name]"
done < $csvfile

################################################################################################################################################################
 
# (1)에서 스크립트를 초기화 한다.
# 셸 변수 csvfile에는 입력한 CSV 파일명을, 셸 변수 GRAPH_WIDTH에는 그래프 폭을 설정

# (2)에서는 텍스트 그래프를 출력하는 셸 함수를 정의한다.
# 함수는 숫자를 하나 받아서 그 개수만큼 "*"를 표시하는 함수이다.

# (3)은 카운터 변수를 지역 변수로 초기화한다.
# (4)는 함수 인수 $1 보다 카운터가 작으면 "*"를 계속 출력한다.
# 그리고 "*"를 출력할 때는 echo 명려어 -n 옵션을 사용해서 줄바꿈 없이 출력한다.

# (6)은 CSV 파일에서 미리 최댓값을 취득하는 처리이다.
# 텍스트 그래프를 작성할 때는 폭을 구해서 그 안에 들어가도록 해야 한다.
# 따라서 우선 자료 최댓값을 취득해서 그 너비 안에 들어가게 한다.

# 우선 awk 명령어 구분자로 -F,(쉼표)를 지정하고 세 번째 컬럼을 {print $3}으로 표시한다.
# 이걸 파이프로 sort 명령어에 넘겨서 -nr 옵션으로 숫자 역순 정렬한다.
# 마지막으로 head 명령어 지정 줄 수를 취득하는 -n 옵션으로 1을 지정하고 첫 줄을 추출한다.
# 이걸로 CSV 파일 점수값 중 최댓값을 셸 변수 max에 대입할 수 있다.

# (7)dms (6)에서 얻은 최댓값이 0이면 셸 변수 max에 1을 설정한다.
# 그래프 폭 계산에서는 최댓값으로 나누기를 하므로 그대로 0을 쓰면 에러가 발생하기 때문이다.

# 이걸로 그래프를 그릴 준비가 되었으므로 (8)에서 CSV 파일에서 순서대로 자료를 읽어 그래프를 그린다.
# 또한 IFS에 임시로 쉼표를 설정해서 셸 변수 id, name, score에 값을 넣는다.

# (9)는 텍스트 그래프를 출력하느 markprint 함수에 "*" 출력 개수를 넘긴다.
# score 숫자를 그대로 지정하면 너비를 넘을 수도 있으므로 정규화를 위해 최댓값 max로 나눈값을 expr 명령어로 계산해서 그 값을 markprint 함수에 전달한다.

# (9) 다음에 CSV 파일 두 번째 컬럼(이름 컬럼)에서 추출한 값이 셸 변수 name에 저장되어 있으므로 * 오른쪽에 [$name]으로 표시한다.