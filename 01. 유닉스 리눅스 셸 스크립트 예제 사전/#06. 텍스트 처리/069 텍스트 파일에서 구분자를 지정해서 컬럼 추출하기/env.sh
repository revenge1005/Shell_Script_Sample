#!/bin/bash

### 사용처 ###
# 설정된 환경 변수 목록을 얻어서 어떤 변수명이 정의되어 있는지 확인하고 싶을 때 

### 사용 명령어 ###
# env, grep, cut

### 해설 ###
# 이 스크립트는 현재 설정한 환경 변수 목록을 env 명령어로 취득해서 지정한 환경 변수가 설정되어 있는지 판별한다.

# 셸 스크립트는 환경 변수에 의존된 코드가 많으므로 미리 확인해서 사용하는 경우를 가정한다.

# 이 예제에서는 start.sh라는 스크립트를 내부에서 실행하는데 star.sh를 실행하려면 환경 변수 TMPVAR 설정이 필요하다고 하자.

################################################################################################################################################################

# 미리 설정하지 않으면 에러가 발생하는 환경변수 정의 
envname="TMPVAR"                                                        # (1)

# env 명령어로 환경 변수 목록을 표시해서 cut 명령어로
# * 첫 번째 값을 표시 [-f 1]
# * 분리자는 : [-d "="] > env.lst
env | cut -f 1 -d "=" > env.lst                                         # (2)

# 확인할 환경 변수명이 env.lst 정의되어 있는지 확인
grep -q "^${envname}" env.lst                                           # (3)

if [ $? -eq 0 ]; then                                                   # (4)
    # 환경변수가 설정되어 있으면 start.sh 실행
    echo "환경 변수 $envname가 설정되어 있다."                            # (5)
    ./start.sh
else
    echo "환경 벼수 $envname가 설정되어 있지 않다."
fi

################################################################################################################################################################
 
# (2)에서 env 명령어를 사용해서 설정되어 있는 환경 변수를 임시 파일 env.lst에 출력한다.
# env 명령어 출력 결과는 "환경변수명=값" 처럼 = 기호로 구분된다.
# 환경 변수명은 첫 번째 컬럼에 있는데 이런 텍스트 파일에서 지정한 컬럼값을 추출할 때는 구분자를 지정해서 n번째 값을 추출하는 명령어를 사용한다.

# cut 명령어는 텍스트 파일에서 어떤 일부분 추출하는 명령어이다.
# -d 옵션으로 구분자를 지정해서 -f 명령어와 이어진 숫자로 추출할 상소를 지정한다.

# (2)에서 -d "="로 지정해서 =으로 나누고 -f 1로 첫 번째 값 즉 설정된 환경 변수명을 추출할 수 있다.

# (3)에서 확인하고 싶은 환경 변수명이 정의되어 있는지 확인한다.
# 여기서 명령어 종료 스테이터스만 사용하므로, grep 명령 결과를 출력하지 않도록 -q 옵션을 사용한다.

# (4)에서 grep 명령어 종료 스테이터스($?)를 사용해서 환경 변수가 설정되어 있는지에 따라 결과를 출력한다.

################################################################################################################################################################
 
### << 주의 사항 >>

# if [ -z "TESTVAR" ]; then
#    echo "환경 변수 TESTVAR는 비었음"
# else
#    echo "환경 변수 TESTVAR는 설정되어 있음"
# fi

# test 명령어에 빈 문자열인지 확인하는 -z 연산자를 써서 환경 변수값이 빈 문자열인지 확인하는게 일방적이다.
# 하지만, 이 방법은 환경 변수가 미정의인지 아니면 빈 문자열로 설정되었는지 구분할 수 없다. (실제로는 큰 차이는 없다.)

# awk 명령어로 = 이 구분자인 테스트 파일에서 첫 번째 컬럼을 추출하려면 구분자 문자열을 지정하는 -F 옵션을 사용한다.
# $ awk -F='{print $1}'
