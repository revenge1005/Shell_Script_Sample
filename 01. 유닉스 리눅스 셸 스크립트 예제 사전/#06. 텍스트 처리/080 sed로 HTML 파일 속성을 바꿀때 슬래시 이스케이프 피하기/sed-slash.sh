#!/bin/bash

### 사용처 ###
# sed 명령어로 /를 포함한 문자열을 치환할 때 일일이 이스케이프하고 싶지 않을 때

### 사용 명령어 ###
# sed

### 해설 ###
# 이 스크립트는 현재 디렉토리에 있는 HTML 파일에서 /img/ 라는 문자열을 /images/ 로 변경한다.

# 치환한 다음 [newdir]이라는 디렉토리에 HTML 파일로 출력하며 웹서버 구성이 변경되어 디렉토리명이 [img]에서 [images]로 변했을 때 사용할 수 있다.

################################################################################################################################################################
 
# 출력 디렉토리 정의
outdir="newdir"

# 출력 디렉토리 존재 확인, 없으면 에러
if [ ! -d "$outdir" ]; then                                               # (1)
    echo "출력 디렉토리가 존재하지 않습니다.: $outdir" >&2
    exit 1
fi

# 현재 디렉토리의 html 파일 처리
for htmlfile in *.html                                                   # (2)
do
    # 파일 내용에서 /img/ 를 /images/ 로 변환
    sed "s%/img/%/images/%g" "$htmlfile" > "${outdir}/${htmlfile}"      # (3)
done

################################################################################################################################################################
 
# sed 명려어로 치환할 때 보통은 s 명령어 뒤에 /(슬레시)로 패턴을 표시하도록 설명한다.
# 이때 치환하고 싶은 문자열 자체에 /(슬레시)가 들어 있다면 \ 기호로 이스케이프해야 한다.

# 문자열 blue를 read로 치환
# > sed "s/blue/red/g" sample.txt

# 문자열 /img/를 /images/로 치환. (이때 \/로 이스케이프)
# > sed "s/\/img\//\/images\//g" sampl.txt

# sed 명령어로 치환할 때 패턴을 지정할 구분자는 /(슬래시)가 아니여도 되며, s 뒤에 있는 문자를 자동으로 구분자로 보기 때문이다.
# 하지만 일반 글자를 지정하면 다른 사람이 읽기 힘들게 되므로 관례적으로 사용하느 %를 지정하는 편이 좋다.

################################################################################################################################################################
 
# (1)에서 치환한 다음 HTML 파일의 출력 디렉토리가 존재하지 확인한다.
# -d 연산자를 사용하고 부정 연산자(!)를 연산자를 함께 써서 존재하지 않거나 디렉토리가 아니라면 에로 표시하고 종료

# (2)에서 for 반복문 in으로 *.html을 지정해서 현재 디렉토리의 HTML 파일을 순서대로 셸 변수 htmlfile로 처리한다.

# (3)에서 sed 명령어에 구분자 %를 지정한 방법으로, 처음에 셸 변수 outdir로 정의한 디렉토리에 변환한 파일을 출력해서 [netdir]에 저장한다.
