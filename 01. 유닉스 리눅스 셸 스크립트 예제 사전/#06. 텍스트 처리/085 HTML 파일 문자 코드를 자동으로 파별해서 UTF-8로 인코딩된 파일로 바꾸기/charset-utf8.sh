#!/bin/bash

### 사용처 ###
# HTML 파일 meta 태그에서 자동으로 문자 코드를 판별해서 UTF-8로 변환하고 싶을 떄

### 사용 명령어 ###
# grep, sed, iconv

### 해설 ###
# 이 스크립트는 현재 디렉토리에 있는 HTML 파일을 HTML 파일에 있는 meta 태그로 지정한 문자 인코딩을 써서 UTF-8로 변환한다.
# 다양한 문자 코드로 된 HTML 파일을 UTF-8로 일관 변활할 때 사용한다.
# 변환에는 문자 코드를 바꿀때 자주 사용하는 iconv 명령어를 쓴다.

################################################################################################################################################################

#!/bin/sh

# 변환한 파일을 출력할 디렉터리
outdir="newdir"    #(1)

# 파일 출력용 디렉터리 확인
#(2) 
if [ ! -d "$outdir" ]; then
  echo "Not a directory: $outdir"
  exit 1
fi

# 현재 디렉터리의 .html 파일이 대상
# (3)
for filename in *.html
do
  # grep 명령어로 meta 태그 Content-Type을 선택해서
  # sed 명령어로 charset=지정 부분 추출
  #(4)
  charset=$(grep -i '<meta ' "$filename" |\ 
  grep -i 'http-equiv="Content-Type"' |\ 
  sed -n 's/.*charset=\([-_a-zA-Z0-9]*\)".*/\1/p')

  # charset을 얻지 못하면 iconv 명령어를 실행하지 않고 건너뛰기
  #(5)
  if [ -z "$charset" ]; then
    echo "charset not found: $filename" >&2
    continue
  fi

  # meta 태그에서 추출한 문자 코드에서 UTF-8으로 변환
  # 디렉터리 $outdir에 출력  #(6)
  iconv -c -f "$charset" -t UTF-8 "$filename"  > "${outdir}/${filename}"
done


################################################################################################################################################################

# (1)에서 변환 후 출력할 디렉토리를 정의

# (2)는 출력용 디렉토리를 확인

# (3)에서 현재 디렉토리에 있는 HTML 파일을 순서대로 셸 qustn filename에 넣어 처리한다.

# (4)에서는 HTML 파일에서 문자 코드를 추출하고 셀 변수 charset에 저장한다.

################################################################################################################################################################

# HTML은 파일 문자 코드를 meta 태그 content 속성에서 charset=으로 지정한다.

# EUC-KR
<meta http-equiv="Content-Type" content="text/html"; charset="euc-kr">

# 태그를 대문자로 쓰거나 charset 앞에 공백이 없을 수도 있고, 순서가 바뀌어아도 됨
<META HTTP-EQUIV="Content-Type" CONTENT="text/html;charset=UTF-8">

# 이렇듯 HTML 표기 방법이 다양하므로 전부 대응하는 건 힘드며, 이 스크립트에서는 다음과 같은 사양으로 문자 코드 지정을 추출한다.

# 1) <meta http-equiv="Content-Type"을 표함한 줄을 grep으로 선택
# 2) charset=문자열 뒤에 딸린 문자열을 sed 명령어로 추출

################################################################################################################################################################

# (4) 여기서 charset 등호 기호 뒤에 추출할 문자 코드가 있으므로 이걸 charset==\([-_a-zA-Z0-9]*\) 라는 패턴을 지정한다.

# 문자 코드는 EUC-KR 처럼 기본적으로 알파벳, 하이픈, 언더바, 숫자로만 구성되므로, 이걸 문자 클래스로 [-_a-zA-Z0-9] 처럼 표현한다.

# (5)는 (4)에서 추출한 charset 문자열을 확인

iconf -f <입력 문자 코드> -t 출력 문자 코드> <파일 명>

# (6) 마지막에 출력을 new 디렉토리로 디라이렉트해서 변환한 파일을 출력한다.

################################################################################################################################################################

### 주의 사항

# HTML5는 다음 처럼 간단한 charset 지정이 가능하다
# <meta charset="UTF-8">

# 예제에서는 이 형식에 대응하지 못하므로 sed 명령어 부분을 다음 처럼 변경해야 한다.
# sed -n 's/<meta .*charset=\([-_a-zA-Z0-9]*\)".*/\1/p'