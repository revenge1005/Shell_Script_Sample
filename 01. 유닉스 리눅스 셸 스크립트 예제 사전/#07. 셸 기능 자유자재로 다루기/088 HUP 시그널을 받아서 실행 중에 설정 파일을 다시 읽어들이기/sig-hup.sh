#!/bin/bash

### 사용처 ###
# 실행 중인 스크립트의 설정 파일이 바뀌어도 프로세스를 멈추지 않고 다시 설정 파일을 읽어들이고 싶을 때

### 사용 명령어 ###
# trap, uptime, .(닷 명령)

### 해설 ###
# 이 스클비트는 서버 부하 평균값을 1초마다 한 번씩 파일로 반복 출력한다.
# uptime 명령어는 다음 처러럼 서버 기동 시간과 서버의 과거 1분/5분/15분 부하 평균값을 출력한다.
# 이 결과를 장시간 추출하면 서버 부하 상태를 볼수 있다.

################################################################################################################################################################

# 환경 초기화 셸 함수. 로그 출력할 곳을 설정한 setting.conf 읽음
#(1)
loadconf() {
  . ./setting.conf
}

# HUP 시그널로 설정을 다시 읽도록 정의
#(2)
trap 'loadconf' HUP

# 첫 초기화
#(3)
loadconf

# 무한 반복
#(4)
while :
do
  # uptime 명령어 결과를 setting.conf로 지정한 경로에 로그 출력
  #(5)
  uptime >> "${UPTIME_FILENAME}"
  sleep 1
done

#################################################################################################################################################################

# 이 스클비트는 (1)에서 환경 초기화 셸 변수를 정의한다.

# (2)는 trap 명령어로 HUP 시그널로 끼어들기를 정의한 부분이다.
# 여기에서는 설정 파일을 다시 읽기 위해 loadconf 함수를 호출하며, trap 명령어는 실제 처리를 작은 따옴표로 싸기 때문에 긴 처리는 쓰기 힘드니 
# 셸 함수를 따로 정의해두고 그 함수를 호출하도록 하는 방법을 사용한다.

# (3)은 실행했을 때 처음에 실행됨, 여기서 loadconf 함수를 불러서 설정을 초기화한다.

# (4)부터 실제로 uptime 명령어를 실행해서 while 반복한다.
