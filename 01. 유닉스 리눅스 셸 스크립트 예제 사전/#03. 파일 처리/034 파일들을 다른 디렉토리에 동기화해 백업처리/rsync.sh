#/bin/bash

### 사용처 ###
# 매일 새로운 로그 파일이 생성되는 등 파일이 늘어나는 디렉토리를 효과적으로 백업하고 싶을 때
### 사용 명령어 ###
# rsync

### 해설 ###
# 이 스크립트는 로그 파일이 저장된 디렉토리 log/myapp 에서 back 디렉토리로 백업한다.
# 여기서 rsync 명령어를 써서 대량의 파일이 있더라도 파일 차분만 갱신하는 효율적인 백업이 포인트이다.

################################################################################################################################################################

log_dir="log/myapp"
back_dir="back"

rsync -av "$log_dir" "$back_dir"

################################################################################################################################################################

# rsync 명령어는 이름처럼 sync(동기화)하는 명령어이다.
# 1) 복사할 때는 원본과 대상의 차이를 바탕으로 갱신된 파일만 복사하므로 효율적이다.
# 2) 파일 타임스탬프, 퍼미션, 소유자 정보 등 파일 속성을 그대로 복사할 수 있다.
# 3) ssh를 써서 원격 서버에서도 복사할 수 있다.

# rsync 명령어 사용법은 다음과 같다.
# > rsync [옵션] <복사 원본> <복사 대상>

# 에제에서는 사용한 옵션은 -a(아카이브 모드), -v(verbose 모드, 상세 모드)이다.
# 또 하나 기억해두면 좋은 옵션은 -n(dry-run 모드)잇으며, -n을 사용하면 실제 파일 복사는 하지 않으며 간단히 테스트할 수 있다.

################################################################################################################################################################

# rsync 명령어는 복사 원본 마지막에 슬래시가 있으면 디렉토리 자체는 복사하지 않고 디렉토리 안에 있는ㄴ 파일과 서브디렉토리 전부를 복사한다.

################################################################################################################################################################

# rsync 명령어는 원격 서버로 백업할 수 있다. 이때 다음처럼 파일 경로 앞에 "사용자명@호스트명:"을 지정한다.
# rsync -av log/myapp user1@server1:/back

# 기본 통신 프로토콜로 SSH를 사용하며, 또는 명시적으로 SSH 프로토콜이라고 지정하려면 -e SSH 옵션을 사용한다.
# rsync -av -e ssh log/myapp user1@server1:/back

# rsync 명령어는 차분 갱신을 하는데 복사 원본에서 삭제된 파일은 복사 대상에서 삭제되지 않는다.
# 이럴 때 완전히 디렉토리를 동기화시키고 싶으면(즉, 복사 원본에서 지워진 파일을 복사 대상에서도 지우고 싶을 때) --delete 옵션을 사용한다.
# rsync -av --delete log/myapp user1@server1:/back
