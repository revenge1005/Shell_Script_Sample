#/bin/bash

### 사용처 ###
# 파일이 너무 많아 단순히 *로 파일을 지정하면 에러가 발생하는 상황에서 grep 명령어 등을 실행하고 싶을 때

### 사용 명령어 ###
# find, xargs, grep

### 해설 ###
# 이 스크립트는 수많은 파일이 존재하는 디렉토리 log/myapp 에 대해 "ERROR"라는 문자열을 포함한 파일을 grep 명령어로 검색한다.
# 여기서 디렉토리 log/myapp에는 단순히 grep 명령어를 실행하면 에러가 발생할 만큼 많은 로그 파일이 존재한다고 가정한다.

################################################################################################################################################################

logdir="log/myapp"

# 확장자 .log 파일에 "ERROR" 문자열 검색
find $logdir -name "*.log" -print | xargs grep "ERROR" /dev/null

################################################################################################################################################################

# 파일이 많으면 에러 발생
# grep 'ERROR' *.log
# -bash: /bin/grep: Argument list too long

# 여기서 "Argument list too long" 이라는 에러가 발생한 원인 *(애스터리스크)가 셸에 따라 확장될 때 무척 긴 문자열이 되므로 명령행
# 인수가 시스템이 다룰 수 있는 한계를 넘었기 때문이다.

# 유닉스에서는 명령행 인수 상한값이 ARG_MAX 상수로 정해져 있다.
# 따라서 많은 파일이 있을 때 *로 파일 목록을 넘기면 ARG_MAX 이상의 문자열 길이가 되어서 에러가 발생한다.

# ARG_MAX 값은 리눅스라면 getconf 명령어로 확인할 수 있다.

################################################################################################################################################################

# 이 스크립트에서는 특별한 처리를 위해 다상 파일에 /dev/null을 추가한다.
# 이것은 grep 명령어 출력에 반드시 파일명을 포함하기 위한 처리이다.
# grep 명령어에서는 여러 파일을 대상으로 할 때 다음처럼 앞부분에 파일명을 출력해 일차하는 줄을 출력한다.
# grep "ERROR" *
# <파일명>:<일치한 줄>
# <파일명>:<일치한 줄>
# <파일명>:<일치한 줄>
# <파일명>:<일치한 줄>
# ...................