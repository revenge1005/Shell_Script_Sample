#/bin/bash

### 사용처 ###
# 두 디렉토리가 비슷한 구조일 때 한쪽에만 있거나 양쪽에 있는 파일을 보기 좋게 목록화 시

### 사용 명령어 ###
# find, sort, comm

### 해설 ###
# 이 스크립트는 현재 디렉토리 아래에 있는 dir1과 dir2 디렉토리의 파일을 조사해서
# 1) dir1 에만 있는 파일
# 2) dir2 에만 있는 파일
# 3) dir1과 dir2 양쪽에 있는 파일
# 을 나눠서 출력한다.

################################################################################################################################################################

# 비교 대상
dirA="dir1"
dirB="dir2"

# dir1/과 dir2/ 파일 목록 차이를 조사하기
( cd ${dirA}; find . -maxdepth 1 -type f -print | sort ) > ${dirA}-file.lst    #  ┐
                                                                               # (1)
( cd ${dirB}; find . -maxdepth 1 -type f -print | sort ) > ${dirB}-file.lst    #  ┘

comm ${dirA}-file.lst ${dirB}-file.lst                                         # (2)

################################################################################################################################################################

# (1)에서 각각 서브디렉토리마다 파일 목록을 임시 파일에 출력한다.
# 여기서 디렉토리 이동과 리다이렉트 출력 모두를 서브 셸에서 한다.
# (서브셸을 쓰는 것은 cd 명령어로 현재 디렉토리를 이동하고 나서 원래 디렉토리로 자동으로 돌아오기 위해서이다.)

# (1)에서는 디렉토리 파일 목록을 만들 때 find 명령어로 -type f를 지정해서 디렉토리를 제외하고 보통 파일만 지정한다.
# 그리고 -maxdepth 1로 두 단계 이상 깊은 디렉토리 안에 있는 파일을 제외하고 서브디렉토리 바로 아래 있는 파일만 대상으로 삼는다.

# (2)에서 comm 명령어로 두 디렉토리 파일 목록 차분을 출력한다.
# comm 명령어는 파일 내용을 비교하는 명령어로 두 입력 파일을 읽어서 같은 줄과 다른 줄을 각각 표시한다.
# > comm file1 file2
# 1) 첫 번째 열은 file1에만 있는 행을 출력
# 2) 두 번째 열은 file2에만 있는 행을 출력
# 3) 세 번째 열은 양쪽에 공통된 행 출력

# 그리고 comm 명령어를 사용할 때는 입력 파일이 정렬되어 있어야 한다.
# 따라서 예제에서는 (1)에서 find를 실행한 다음 sort 명령어로 정렬하고 임시 파일에 출력한다.
# 이렇게 디렉토리 파일 목록을 comm 명령어로 비교해서 각 디렉토리에 있는 파일을 비교한다.