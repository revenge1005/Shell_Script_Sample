#/bin/bash

### 사용처 ###
# touch 명령어로 타임스탬프를 갱신하는 초기화 스크립트 등에서 존재하지 않는 파일은 새롭게 만들고 싶지 않을 때

### 사용 명령어 ###
# touch

### 해설 ###
# 이 스크립트는 app1.log와 lock.tmp라는 두 파일의 타임스탬프를 갱신한다.

# 로그 파일을 조작하는 다른 프로그램을 위해 테스트 자료를 만드는 경우를 생각해볼 수 있다.
# 그 프로그램은 로그 파일(app1.log)의 타임스탬프를 판별해서 무엇인가 처리를 합니다.
# 테스트를 할 때마다 셸 스크립트를 실행해서 테스트 자료를 초기화하는 것은 자주 쓰는 방법이다.

# 이 예제는 그런 테스트 일환으로 작성한 셸 스크립트이다.

################################################################################################################################################################

# [YYYYMMDDhhmm.SS]로 년월일시분.초 지정
timestamp="201311190123.45"

# 파일 타임스탬프 갱신
# -c 옵션이 있으므로 lock 파일은 신규 파일을 만들지 않음
touch -t $timestamp app1.log         #(1)
touch -c -t $timestamp lock.tmp      #(2)

################################################################################################################################################################

# 유닉스 파일 타임스탬프
# 1) atime : 최종 접근시간 (Access time)
# 2) mtime : 최종 수정시간 (Modify time)
# 3) ctime : 최종 상태변경시각 (Change time)

# touch 명령어
# (1)에서 -t 옵션으로 시각 지정하면 atime과 mtime을 갱신한다.
# (2)에서 락 파일의 타임스탬프도 변경한다 락 파일을 다룰 때 -c 옵션을 사용한다.

# touch 명령어를 사용하면 빈 파일을 작성한다라는 것은 잘 알려진 동작이다.
# 하지만 이런 텍스트 파일 초기화에서는 '파일이 있으면 타임스틈프를 변경하지만 파일이 없으면 아무것도 안 하고 싶은 경우'도 자주 있다.

# 파일이 존재를 if 문으로 확인하는 것은 가독성도 좋지 않고 나중에 수정하기도 힘들다.
# if [ -e lock.tmp ]; then
#   touch -t $timestamp lock.tmp
# fi
# 그보다는 예제처럼 touch 명령어에 -c 옵션을 사용하면 존재하지 않는 파일은 작성하지 않도록 간단히 지정할 수 있다.