#/bin/bash

### 사용처 ###
# 다른 프로그램과 연계하기 위해 압축 형식은 gz 그대로이지만 압축률을 높이고 싶을 때

### 사용 명령어 ###
# gzip, bzip2, xz

### 해설 ###
# 이 스크립트는 디렉토리 log를 tar 아카이브한 다음에 gzip으로 압축한다.

################################################################################################################################################################

tar cf archive.tar log

# -9 옵션으로 압출률을 최대로 함
gzip -9 archive.tar                    # (1)

################################################################################################################################################################

# (1)에서 gzip 압축할 때 -9 옵션을 줘서 압축률을 올린다.

# 현재는 gzip 형식보다 높은 압축률을 보이는 bzip2나 xz 파일 형식 등도 널리 사용된다.
# 가능하면 이런 고압축률 포맷으로 이전하는 것이 좋곘지만 오래된 시스템과 연계된 다른 프로그램도 수정해야 해서 포맷을 바꾸는 일이 간단하지 않다.

# 이럴 때 어떻게든 디스크 영역을 절약하고 싶다면 예제에서 나온 -9 옵션을 사용한다.
# gzip 명령어는 "-순자" 옵션을 써서 처리 시간과 압축률을 조정할 수 있다.
# 이 값은 1에서 9까지 단계로 지정할 수 있어서 숫자가 클수록 압축률이 높다. (기본값 6)

################################################################################################################################################################

# gz 형식 파일을 고집하지 않는다면 더 압축률이 높은 명령어를 사용하는 것이 좋다.

# 리눅스라면 bzip2 명령어, FreeBSD라면 xz 명령어가 많이 사용된다.
# 둘다 옵션은 gzip 명령어와 호환성이 있어 부담 없이 사용할 수 있다.

# tar 명령어로 아카이브해서 압축하려면 다음처럼 중간 파일을 만들지 않아도 압축할 수 있다.
# 이러면 .tar 파일을 디스크에 저장하지 않아도 되므로 작업 시 디스크 사용량을 절약할 수 있다.
# tar cf - log | gzip -9 -c > archive.tar.gz
